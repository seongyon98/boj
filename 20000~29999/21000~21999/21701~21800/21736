from collections import deque

def bfs_find_people(n, m, campus):
    dirc = [(-1, 0), (1, 0), (0, -1), (0, 1)]
    
    s_x, s_y = -1, -1
    for i in range(n):
        for j in range(m):
            if campus[i][j] == 'I':
                s_x, s_y = i, j
                break
        if s_x != -1:
            break
        
    queue = deque([(s_x, s_y)])
    v = [[False] * m for _ in range(n)]
    v[s_x][s_y] = True
    
    p = 0
    while queue:
        x, y = queue.popleft()
        for dx, dy in dirc:
            nx, ny = x + dx, y + dy
            if 0 <= nx < n and 0 <= ny < m and not v[nx][ny] and campus[nx][ny] != 'X':
                v[nx][ny] = True
                if campus[nx][ny] == 'P':
                    p += 1
                queue.append((nx, ny))
    
    return p

n, m = map(int, input().split())
campus = [list(input().strip()) for _ in range(n)]

result = bfs_find_people(n, m, campus)

if result == 0:
    print("TT")
else:
    print(result)
