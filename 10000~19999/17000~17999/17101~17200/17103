import sys
input = sys.stdin.readline

def sieve(max_n):
    is_prime = [True] * (max_n + 1)
    is_prime[0] = is_prime[1] = False
    p = 2
    while p*p <= max_n:
        if is_prime[p]:
            for multi in range(p*p, max_n+1, p):
                is_prime[multi] = False
        p += 1
    return is_prime

def goldbach_partitions(n, is_prime):
    count = 0
    for i in range(2, n//2 + 1):
        if is_prime[i] and is_prime[n - i]:
            count += 1
    return count


MAX_N = 1000000
is_prime = sieve(MAX_N)

T = int(input().strip())

for _ in range(T):
    N = int(input().strip())
    print(goldbach_partitions(N, is_prime))
