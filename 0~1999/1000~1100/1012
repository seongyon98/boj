from collections import deque
import sys
input = sys.stdin.readline

def bfs(field, x, y, m, n):
    queue = deque([(x, y)])
    field[y][x] = 0
    dirc = [(-1, 0), (1, 0), (0, -1), (0, 1)]
    
    while queue:
        cx, cy = queue.popleft()
        for dx, dy in dirc:
            nx, ny = cx+dx, cy+dy
            if 0 <= nx < m and 0 <= ny < n and field[ny][nx] == 1:
                field[ny][nx] = 0
                queue.append((nx, ny))
                

t = int(input().rstrip())
for _ in range(t):
    m, n, k = map(int, input().split())
    field = [[0]*m for _ in range(n)]
    for _ in range(k):
        x, y = map(int, input().split())
        field[y][x] = 1
        
    worm_cnt = 0
    for y in range(n):
        for x in range(m):
            if field[y][x] == 1:
                bfs(field, x, y, m, n)
                worm_cnt += 1
            
    print(worm_cnt)