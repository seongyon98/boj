from collections import deque
import sys
input = sys.stdin.readline

def bfs(grid, visited, start, m, n):
    dirc = [(-1, 0), (1, 0), (0, -1), (0, 1)]
    queue = deque([start])
    visited[start[0]][start[1]] = True
    area = 0
    
    while queue:
        x, y = queue.popleft()
        area += 1
        
        for dx, dy in dirc:
            nx, ny = x+dx, y+dy
            if 0<=nx<m and 0<=ny<n and not visited[nx][ny] and grid[nx][ny] == 0:
                visited[nx][ny] = True
                queue.append((nx, ny))
    
    return area

m, n, k = map(int, input().split())

grid = [[0]*n for _ in range(m)]
for _ in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    for i in range(y1, y2):
        for j in range(x1, x2):
            grid[i][j] = 1
            
visited = [[False]*n for _ in range(m)]
areas = []

for i in range(m):
    for j in range(n):
        if grid[i][j] == 0 and not visited[i][j]:
            area = bfs(grid, visited, (i, j), m, n)
            areas.append(area)
            
areas.sort()
print(len(areas))
print(*areas)